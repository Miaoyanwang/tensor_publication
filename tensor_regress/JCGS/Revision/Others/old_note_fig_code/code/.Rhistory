library(tensorregress)
set.seed(0)
d = 10; alpha = 3
core = array(runif(2^3,-alpha,alpha), dim = c(2,2,2))
W1 = randortho(d)[,1:2]
W2 = randortho(d)[,1:2]
W3 = randortho(2)[,1:2]
X0 = randortho(d)
X = X0[,1:2]
B = ttl(as.tensor(core), list(W1,W2,W3), c(1,2,3))
library(pracma)
set.seed(0)
d = 10; alpha = 3
core = array(runif(2^3,-alpha,alpha), dim = c(2,2,2))
W1 = randortho(d)[,1:2]
W2 = randortho(d)[,1:2]
W3 = randortho(2)[,1:2]
X0 = randortho(d)
X = X0[,1:2]
B = ttl(as.tensor(core), list(W1,W2,W3), c(1,2,3))
d = 10; alpha = 3
core = array(runif(2^3,-alpha,alpha), dim = c(2,2,2))
W1 = randortho(d)[,1:2]
W2 = randortho(d)[,1:2]
W3 = randortho(d)[,1:2]
B = ttl(as.tensor(core), list(W1,W2,W3), c(1,2,3))
test = tensor_regress(Y, X_covar1 = NULL,X_covar2=NULL,X_covar3=X,c(2,2,2),niter = 10,cons="non",dist="normal", initial = "QR_tucker")
test = tensor_regress(B@data, X_covar1 = NULL,X_covar2=NULL,X_covar3=X,c(2,2,2),niter = 10,cons="non",dist="normal", initial = "QR_tucker")
test$G
core
B
library(plot.matrix)
library(RColorBrewer)
plot(B@data[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-2, 2, length.out=12),border = NA)
plot(B@data[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-0.5, 0.5, length.out=12),border = NA)
set.seed(0)
d = 10; alpha = 3
core = array(runif(2^3,-alpha,alpha), dim = c(2,2,2))
W1 = randortho(d)[,1:2]
W2 = randortho(d)[,1:2]
W3 = randortho(d)[,1:2]
B = ttl(as.tensor(core), list(W1,W2,W3), c(1,2,3))
test = tensor_regress(B@data, X_covar1 = NULL,X_covar2=NULL,X_covar3=X,c(2,2,2),niter = 10,cons="non",dist="normal", initial = "QR_tucker")
plot(B@data[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-0.5, 0.5, length.out=12),border = NA)
plot(B@data[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
plot(test$U[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
plot(test$C_ts[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
set.seed(0)
d = 10; alpha = 3
core = array(runif(2^3,-alpha,alpha), dim = c(2,2,2))
W1 = randortho(d)[,1:2]
W2 = randortho(d)[,1:2]
W3 = randortho(d)[,1:2]
B = ttl(as.tensor(core), list(W1,W2,W3), c(1,2,3))
test = tensor_regress(B@data, X_covar1 = NULL,X_covar2=NULL,X_covar3=NULL,c(2,2,2),niter = 10,cons="non",dist="normal", initial = "QR_tucker")
plot(B@data[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
plot(test$C_ts[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
test = tensor_regress(B@data, X_covar1 = NULL,X_covar2=NULL,X_covar3=NULL,c(2,2,3),niter = 10,cons="non",dist="normal", initial = "QR_tucker")
plot(test$C_ts[,,1], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
plot(test$C_ts[,,3], col=brewer.pal(n = 11, name = "RdBu"), breaks = seq(-1, 1, length.out=12),border = NA)
test$G
mean((B@data - test$U)^2)
